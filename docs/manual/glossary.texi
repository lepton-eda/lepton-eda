@node Glossary of EDA terms, Topic Index, Lepton EDA fonts, Top
@appendix Glossary of EDA terms
@cindex glossary

The design of electronics involves a host of specific terms.  Some
words have a meaning that only vaguely resembles the use in everyday
life.  This glossary aims to be a dictionary of terms specific to the
Lepton EDA suite and related projects, as well as to the larger world
of CAD for electronics.  Unfortunately, there is no universal naming
scheme for concepts in the area of electronic design.  The glossary
will give hints on how things are called in other design suites.

@menu
* Glossary of general terms::
* Glossary of schematic capture and netlisting related terms::
* Glossary of PCB related terms::
@end menu

@node Glossary of general terms, Glossary of schematic capture and netlisting related terms, Glossary of EDA terms, Glossary of EDA terms
@section Glossary of general terms
@cindex glossary of general terms

@itemize
@item
@samp{design flow}: The order or stages through which you take your
design as you progress from initial concept, through schematic
capture, attribute attachment, netlisting, and layout.  In the Lepton
EDA Suite, entirely separate programs are used for different stages of
the flow; each tool reads the output file produced by the previous
tool, and writes a file to be read by the next tool in the flow.  The
Lepton EDA design flow for designing a PCB is illustrated
@url{geda-usage.html#what_does_the_design_flow_in_geda_look_like,
here}.  Note that the design flow for different tasks might look
different.  For example, if your goal is to simulate your circuit, you
will use a different flow than that shown in the link above.
@c TODO: Fix the link to geda-usage.html
@item
@samp{gedasymbols.org}: A website dedicated to present symbols,
footprints, scripts, plug-ins and other stuff users contributed to the
gEDA project, the predecessor of Lepton.  They can be used along with
Lepton, of course.  Contributions can be accessed by mouse click.  The
whole site can be downloaded via concurrent versions system,
@url{http://en.wikipedia.org/wiki/Concurrent_Versions_System, CVS}.
This also the way users maintain their pages on the site.  See
@url{http://gedasymbols.org/}.
@item
@samp{refdes}: Short for
@url{https://en.wikipedia.org/wiki/Reference_designator, reference
designator}.  The unique designator (or name) of a component.  The
Lepton EDA and related tools rely on the refdeses to organize the
components internally.  Therefore, for successful creation of a
printed circuit board every component has to be linked with a refdes.
Usually, the refdes consists of a few upper case letters and a digit.
Examples: R1, R2, U115, CONN3.  (Protel: @emph{Designator}.)
@item
@samp{symbol}: A symbol is the representation of a particular
component in your schematic diagram.  The classic examples are
squiggley lines (US) or rectangles (IEC) for resistors, or a triangle
for an op-amp.  Using a schematic capture program (e.g.
@schematic{}) you place symbols on the canvas, and then
wire them up to create a representation of your circuit.
@end itemize

@node Glossary of schematic capture and netlisting related terms, Glossary of PCB related terms, Glossary of general terms, Glossary of EDA terms
@section Glossary of schematic capture and netlisting related terms
@cindex schematic capture and netlisting glossary

@itemize
@item
@samp{net}: A net is the representation of a wire, or electrical
connection in your schematic diagram.  It is basically a line
connecting two symbol pins.  The term @emph{net} is also sometimes
used loosely to talk about an electrical connection (via a wire or PCB
trace) in a real circuit.  Some schematic capture tools call a net a
@emph{wire}.
@item
@samp{netlist}: A netlist is a text file representation of your
circuit which emphasizes the connections between the different circuit
elements, perhaps independently of the physical packages constituting
the actual components in the circuit.
@item
@samp{slot}: Some components contain multiple, identical devices
inside a single package.  The IOs for each component are mapped to
different pin sets on the package.  A classic example is the TTL 7400
quad NAND gate.  @schematic{} (like other schematic capture packages)
handles this type of component by allowing you to draw four separate
NAND gate symbols, and then selecting which @samp{slot} each symbol
should have by attaching a slot attribute to the symbol.  In the
example of the 7400 quad NAND, you would select @code{slot=1} for the
first appearance of the symbol, @code{slot=2} for the second
appearance, and so on.  Note that in @schematic{} you need to attach
power nets to a slotted component only @emph{once}.  (Other schematic
capture programs like Orcad require you to attach common nets – like
power nets – on each instantiation of the slotted symbol.)
@end itemize

@node Glossary of PCB related terms,  , Glossary of schematic capture and netlisting related terms, Glossary of EDA terms
@section Glossary of PCB related terms
@cindex pcb glossary

@itemize
@samp{action}: In @command{pcb}, an action is an internal command.
Actions can be triggered via the GUI or via the command line
interface.  A sequence of assembled in a file can be executed on
start-up of the application.
@item
@samp{annular ring}: The annular ring, sometimes also called
@samp{annulus}, is a diameter of copper that needs to be placed
arround metalized holes like pads and vias.  The minimum size of the
annular ring is specified by the pcb-fab.  A common requirements is 16
mil larger than the hole.
@item
@samp{component layer}: This is the side of the board where
traditional, thru hole components sit, usually the top side of the
board.  (Protel: @emph{Top Layer}.)
@item
@samp{dead copper}: A part of the copper layer which is not connected
to any net defined in the netlist.  By definition, this may be any
object @command{pcb} defines.  However, the term commonly refers to
unconnected snippets of a polygon which is divided by a track.
@item
@samp{flag}: @command{pcb} objects can contain a number of flags.
These indicate specific properties of the object.  Examples are the
@code{square} flag for angular pads, or the @code{onsolder} flag for
objects on the other side of the board.
@item
@samp{footprint}: The pattern of metal and silkscreen which defines
where you place a component on a PCB.  Footprints are placed by the
user onto the PC board during the @emph{placement} phase of PCB layout
(using e.g. the open-source tool @command{pcb}).  A footprint is also
sometimes called a @emph{decal} (PADS), or a @emph{land-pattern}.
@item
@samp{gerbers}: A set of files sent to a fab representing the geometry
of tracks, silk, solder mask and the outline of the board.  Because
each layer is represented by a separate file, it is customary to
bundle them in a ZIP file.  The offical name of the file format is
@emph{Gerber RS274X}.  See
@url{http://www.artwork.com/gerber/appl2.htm, this web page} for a
cursory description of the format and
@url{http://www.artwork.com/gerber/appl2.htm, this PDF} for a
comprehensive specification.
@item
@samp{GTK-HID}: The GTK version of the @command{pcb} user interface.
@emph{HID} is an acronym for @emph{human interface device}.  As the
name sugests, GTK-HID uses the GTK+ widgetset and tries to comply with
GTK usability standards.  This is the default GUI of @command{pcb}.
Menu and keyboard configuration is read from @file{gpcb-menu.res}.
(See Lesstif-HID for an alternative.)
@item
@samp{Lesstif-HID}: The Lesstif version of the @command{pcb} user
interface.  It uses the Lesstif widgetset, which is the open source
version of Motif.  Menu and keyboard configuration read from
@file{pcb-menu.res} try to comply with Lesstif usability standards.
If you want to give this interface a try, you have to give the option
@option{--with-gui=lesstif} at compile time.
@item
@samp{pad}: A pad is the patch of copper to which an SMD-component is
to be soldered.  Although pads are usually square, they can also be
rounded.
@item
@samp{pin}: A pin is a hole in the printed circuit that allows to
connect a wired component.  In many cases the hole is clad with copper
by the pcb-fab.  Also called a @emph{thru-hole}.
@item
@samp{PCB}: An abbreviation of @emph{printed circuit board}.  This is
the actual hardware that is used to connect electronic components.  It
is also sometimes called a @emph{printed wiring board} (PWB), although
this usage may be dying out.
@item
@samp{pcb}: A powerful, open-source tool used to design the layout of
a printed circuit board.  The output of the Lepton EDA tools can be
used as an input to @command{pcb}. See the
@url{http://pcb.geda-project.org/, home page of pcb}.
@c TODO: Add actual link to the current @command{pcb} project page.
@item
@samp{rats nest}: The lines drawn on the @command{pcb} working area
that hint which pads still need to be connected with tracks.  Unlike
the actual tracks the rats nest are straight lines.  If multiple pads
are involved in a net, @command{pcb} tries to draw rats nests with the
shortest possible length.
@item
@samp{silkscreen}: This is the layer that defines the text and
graphics printed on the PCB board.  It usually contains the name of
the board, outlines of the components and possibly their values or
refdeses.  The origin of the name is the silk traditionally used
during the print process.
@item
@samp{solder layer}: This is the side of the board where traditional,
thru hole components are soldered.  (Protel: @emph{Bottom Layer}.)
@item
@samp{thermal}, short for @url{http://en.wikipedia.org/wiki/thermal
relief pad, thermal relief pad}: A thermal is a way to connect a via
with a copper plane through narrow bridges.  The aim is to connect
electrically, but provide enough thermal resistance to allow for
convenient soldering.  There is a special mode in @command{pcb} to
convert the annular ring of vias into thermals.  (However, vias never
need thermals, since they are never soldered – only thru-holes need
vias).
@item
@samp{via}: A via is a metalized hole that is meant to electrically
connect different layers of the PCB.  Usually, vias are as small as
possible to save valuable real estate on the PCB.  A via is made the
same way as a thru-hole, but since no pin will be pushed through, it's
OK for the metal to completely fill the hole (@emph{filled}) and for
the solder mask to completely cover the hole (@emph{tented}).
@end itemize
